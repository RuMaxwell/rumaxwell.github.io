[{"title":"用 FL Studio 剪辑音频","url":"/blogs/Edit-Audio-in-FL-Studio/","content":"\n我经常会遇到需要剪辑音频的情况，比如需要缩减伴奏时长、拼接两首歌等等。本文是使用 FL Studio 12 剪辑音频的简单教程。\n\n本文假设你已经安装了已注册的 FL Studio 12。\n\n## 导入音频\n\n接下来使用 Audio Clip 插件导入音频。\n\n1  打开软件，界面大致是这样的（**这个界面是第 6 步完成后的**）：\n\n<img src=\"/img/fl-studio/000.png\" />\n\n2  点击这里的 + 号：\n\n<img src=\"/img/fl-studio/001.png\" />\n\n3  在弹出菜单中选择「Misc」下的「Audio Clip」插件：\n\n<img src=\"/img/fl-studio/002.png\" />\n\n4  点击后，在「Channels」界面应当出现一个「Audio Clip」的图标，点击它：\n\n<img src=\"/img/fl-studio/003.png\" />\n\n5  点击后，在弹出窗口中点击文件夹图标：\n\n<img src=\"/img/fl-studio/004.png\" />\n\n6  选择你的音频文件。在这里以 Ed Sheeran 的《Perfect》为例。\n\n<img src=\"/img/fl-studio/005.png\" />\n\n## 剪辑音频\n\n7  移动鼠标到右边的「音轨」界面：\n\n<img src=\"/img/fl-studio/006.png\" />\n\n8  请注意不要改变上面的 Pattern（图中数字 2），点击音轨工具栏中的「刷子」图标（图中数字 1），并点击第一个音轨的空白区域：\n\n<img src=\"/img/fl-studio/007.png\" />\n\n9  在出现的音频剪辑上按住鼠标左右拖动，使其对准音轨开头（第一小节）。\n\n10  按住「Ctrl」（或 Mac 电脑的 Command）键，滑动鼠标滚轮，可以缩短/伸长横向密度（即时间密度）：\n\n<img src=\"/img/fl-studio/008.png\" />\n\n11  请注意此处的“吸铁石”，这是「贴紧」选项，意思是要让音频剪辑对准什么样的地方。点开以后可以看到「Line」「Cell」，各种「Step」、各种「Beat」和「Bar」，分别代表对齐纵线、小格子、小格子的 1/n、一拍的 1/n 及整小节。对齐方式决定在拖动音频剪辑时**必须**对准什么样的东西。一般而言，导入的音频很难与音轨的节拍对齐，所以我们选择一个比较小的对齐单位。这里用了最小对齐单位「1/6 step」。如果想要不对齐任何东西，获得最大的灵活度，可选择「(none)」。但这样可能导致无法很好地拼合两个音频。\n\n<img src=\"/img/fl-studio/009.png\" />\n\n12  之后，在音轨工具栏中选择「Slice」（分割）工具。我们用它将音频剪辑分段：\n\n<img src=\"/img/fl-studio/010.png\" />\n\n13  用这个工具在你想要分割的地方从上到下拖动。为了找到需要分割的地方，需要用鼠标点击图中橙色圈出处。那里会出现一个绿色的箭头。这时按空格会从这里开始播放音频，再按空格可以暂停。你可以任意点击「时间轴」上的地方，从任意地方开始播放音频。绿色小箭头可以拖动。找到需要分割的地方后，按空格暂停，用「分割」工具从上到下划动，就可以将音频分成两段。这时你可以看到这个音轨出现了两个名字相同的音频剪辑：\n\n<img src=\"/img/fl-studio/011.png\" />\n\n14  换回「刷子」工具，左右拖动音频剪辑，可以将它们在时间上分开：\n\n<img src=\"/img/fl-studio/012.png\" />\n\n15  用「分割」工具再进行一次分割，接下来我们将抛弃这部分音频：\n\n<img src=\"/img/fl-studio/013.png\" />\n\n16  将中间的音频剪辑向下拖动一个音轨，将其分离开，然后点击音轨左边的绿色小点，可将该音轨静音。静音后该音轨上的音频便不会播放，你可以按空格试听：\n\n<img src=\"/img/fl-studio/014.png\" />\n\n<img src=\"/img/fl-studio/015.png\" />\n\n17  为了将前后两部分我们需要的音频拼到一起，我们将后一部分拖近，然后横向放大，小心对齐两个音频：\n\n<img src=\"/img/fl-studio/016.png\" />\n\n## 淡出效果\n\n18  接下来我们做一个淡出效果，**双击**「Channels」界面当前「乐器」（也就是《Perfect》的「Audio Clip」）左边的频道按钮，`---` 表示主频道。：\n\n<img src=\"/img/fl-studio/017.png\" />\n\n19  在打开的窗口中**右键单击**「音量条」的「音量调节按钮」:\n\n<img src=\"/img/fl-studio/018.png\" />\n\n20  在打开的菜单中选择「Create Automation Clip」（创建音量控制剪辑）：\n\n<img src=\"/img/fl-studio/019.png\" />\n\n21  关闭「频道」窗口，回到「音轨」界面，发现第三个音轨多了一个音量控制剪辑（Volume Envelope），确保它在一个没有被静音的音轨上：\n\n<img src=\"/img/fl-studio/020.png\" />\n\n22  拖到需要淡出的位置（以结尾为例），用**右键**单击控制线上要开始减弱的地方：\n\n<img src=\"/img/fl-studio/021.png\" />\n\n23  右击后，会出现一个控制点：\n\n<img src=\"/img/fl-studio/022.png\" />\n\n24  因为最终需要减弱到零，所以将最右边的控制点向下拖拽到最低处：\n\n<img src=\"/img/fl-studio/023.png\" />\n\n25  可以调节中间的辅助控制点控制减弱的进度。下图中的效果是先迅速减弱然后慢慢淡出：\n\n<img src=\"/img/fl-studio/024.png\" />\n\n## 确定时间\n\n26  确定歌曲某个位置的时间有两种方法，一种是这个计时器，它指示你在音轨界面的时间轴上绿色小箭头所在的时间点。如果这个计时器显示的不是时间，右键点击它选择 Minute:Second:Millisecond 即可：\n\n<img src=\"/img/fl-studio/025.png\" />\n\n27  或者将鼠标置于时间轴某个点上，这时软件左上角会指示当前位置/时间：\n\n<img src=\"/img/fl-studio/026.png\" />\n\n## 保存和导出\n\n28  完成剪辑后，保存 FL Studio 的工程文件（后缀名 .fl）。\n\n29  然后导出音频文件。主菜单 FILE > Export > MP3 file 或快捷键 Shift + Ctrl/Command + R 可以导出 MP3 格式的音频：\n\n<img src=\"/img/fl-studio/027.png\" />\n\n30  在弹出窗口中选择导出到的文件夹和歌曲名称：\n\n<img src=\"/img/fl-studio/028.png\" />\n\n31  在弹出的导出选项窗口中点击「Start」，等待一段时间，窗口自动消失，此时可以在刚才选择的文件夹中找到导出的音频文件。\n\n<img src=\"/img/fl-studio/029.png\" />\n","tags":["技术-多媒体"]},{"title":"Create My Own Server 系列：（一）购买 VPS，进行初始设置","url":"/blogs/Purchase-VPS-and-Config/","content":"\n## 购买 VPS\n\n[VPS](https://baike.baidu.com/item/VPS/11053576?fr=aladdin) (Vitual Private Server) 即虚拟专用服务器。相对于类似的选择「虚拟主机」，我选择 DigitalOcean VPS 只是因为我是通过 GitHub Student Pack 获得了 DigitalOcean 的 50 刀优惠。\n\n**Warning: 整个教程基于你已经获得了 GitHub Student Pack。**\n\n### 1.1 使用 GitHub Student Pack 获取 DigitalOcean 的 promote\n\n1  访问 [GitHub Student Pack 链接](https://education.github.com/pack)，点击「Get your Pack」按钮。\n\n2  在打开的网页中你可以看到所有可用的优惠包，选择其中的「DigitalOcean」，如果之前没有点开过的话，点击「your offer code」链接。网页刷新后再回到 DigitalOcean 处，点击「DigitalOcean Website」链接。\n\n3  在打开的 DigitalOcean 官网登陆页面，点击「Create your Account」，完成各注册步骤，注意填对邮箱。注册中你需要绑定信用卡或通过 PayPal 支付 5 美元。不要慌，有信用卡用信用卡，没有的话去 PayPal 官网注册一个账号，现在 PayPal 国区很好用。不过绑定银行卡似乎要求工行、建行、商行之一。\n\n4  注册成功后，在 DigitalOcean 的个人页面，在左边 Account -> Billing 选项卡中将 GitHub Student Pack 的优惠码（Promo Code）输入到 Promo Code 一栏中。注意在此不要使用别的优惠码，否则会提示失效。如果已经提示失效，就需要向客服发送 ticket 说明情况。一般是能得到处理的。\n\n5  在你的主页上创建一个新项目，作为个人博客项目。你可以将它命名为你将要创建的博客的名字。\n\n### 1.2 购买 VPS\n\n1  在 DigitalOcean 个人主页左边找到「Droplets」（就是 VPS），或者在你新项目的「Resources」页面点击「Add a Droplet」或其他类似的字眼。根据提示购买 VPS。\n\n2  购买 VPS 选择最便宜的 5 刀/月的即可。服务器选 San Fransisco 或 Singapore 在大陆相对稳定。系统镜像就新手而言推荐 Debian/Ubuntu。SSH 一栏先留空。\n\n3  通常支付是购买后按小时收费（？），而你的账户已经收到 GitHub Promo 的 50 刀余额，所以不用担心。\n\n3  你在注册 DigitalOcean 账号时填的邮箱会收到新 VPS 的 root 密码。若没有收到，你可以点击重新发送，也可以换一个邮箱，还可以先不管，之后在 Droplet 的详情页面更改 root 密码。\n\n### 1.3 SSL 远程登陆服务器\n\n1  当你的 Droplet 已经部署好后，你可以点击个人主页左边的「Droplet」，点击刚创建的 Droplet 的**名称**。在打开的界面上你可以看到你的 Droplet 的 IPv4 地址，点击左边「Graphs」「Access」「Power」等一栏的「Access」。在「Console Access」一栏中，点击「Launch Console」，即可通过 DigitalOcean 平台直连你的 VPS 服务器。\n\n2  正常情况下若你的服务器 IP 没有被墙，过一段时间后会显示 `Login: ` 提示符。如果很久没有出现，或右下角显示失败，则有可能是服务器 IP 被墙或网络不稳定。有时候就算成功登陆也会出现非常卡甚至掉线的情况，这时可以考虑删除 Droplet，重新添加一个 Droplet。你可以更换服务器所在地区。删除后添加 Droplet 不会扣掉一个月的费用。\n\n3  若你已经成功看到 `Login: ` 提示符，输入账户名称 `root` 并回车，输入会有一定的延迟。然后输入 root 密码（很复杂）。\n\n4  若输入正确，控制台会输出欢迎信息，并出现类似于 `root@**Droplet 的名字**:/#` 的提示符，说明你已经成功登陆 VPS。\n\n5  这时你应该按照 [DigitalOcean 的官方教程](https://www.digitalocean.com/community/tutorials/initial-server-setup-with-debian-9)进行新服务器的初始配置，比如创建 sudo 账户等。ufw 防火墙也请务必装上，之后会遇到。\n","tags":["技术-后端"]},{"title":"Create My Own Server!","url":"/blogs/Create-My-Own-Server/","content":"\n这是一个关于「从零开始建立个人服务器并搭建博客」的系列文章。本系列做了以下事情：\n\n*目前进度：1.3*\n\n**1. [购买 VPS，进行初始设置](/blogs/Purchase-VPS-and-Config/)**\n\n1.1 使用 GitHub Student Pack 获取 DigitalOcean 的 promote\n\n1.2 购买 VPS\n\n1.3 SSL 远程登陆服务器\n\n1.4 生成 Public/Private Key 对并使用 Private Key 登陆\n\n1.5 初始设置：配置 ufw 防火墙\n\n**2. 购买域名，进行 DNS 绑定**\n\n2.1 使用 GitHub Student Pack 获取 Namecheap 的一年期免费域名\n\n2.2 DNS 绑定\n\n**3. 安装 Nginx**\n\n3.1 简单验证 Nginx HTTP 服务器可用\n\n3.2 暂时禁用浏览器自动 HTTPS 访问\n\n**4. 购买 SSL 证书**\n\n4.1 为什么要购买 SSL 证书\n\n4.2 使用 GitHub Student Pack 获取 Namecheap 的一年期免费 SSL 证书\n\n4.3 激活 SSL 证书\n\n4.4 配置服务器以允许 HTTPS 服务\n\n**5. 搭建静态博客**\n\n5.1 使用 Hexo + GitHub 搭建静态博客\n\n&nbsp;&nbsp;5.1.1 安装和使用 Hexo\n\n&nbsp;&nbsp;5.1.2 部署到 VPS\n\n5.2 用小技巧处理证书 txt 文件的存放问题\n","tags":["技术-后端"]},{"title":"Hello, Hexo!","url":"/blogs/Hello-Hexo/","content":"\n# Hello, Hexo!\n\nGitHub Pages + Hexo 搭建博客的历程并不算艰辛……相比 Android Studio 的安装配置来说。途中还是遇到不少问题，现同搭建过程中的重点步骤一并呈现。\n\n<!--more-->\n\n\n## 下载 Hexo\n\n由于众所周知的原因，使用原镜像 `npm install` 会非常缓慢。所以我首先切换了 npm 源：\n\n```\n$ npm config set registry \"https://registry.npm.taobao.org/\"\n```\n\n然后 `npm install -g hexo-cli`。\n\n\n\n## 初始化博客\n\n然而真正的缓慢现在才开始。因为 `hexo init` 获取 `themes` 需要 clone GitHub 的 repo。而 GitHub 无法通过设置镜像的方式加速。所以我上了 VPN（其实还是一卡一卡的 (′д｀ )…彡）。\n\n完成之后，在新目录中执行 `npm install`。至此，整个初始化完成。\n\n\n\n## 下载主题\n\n`https://hexo.io/themes/` 中的主题可谓非常之多，我从 A 看到 H 就失去了耐心。但此时我已打开十几个比较喜欢的主题的链接。我一开始点网站中的图片，进的是其他人的博客，在里面疯狂找主题链接……后来发现点标题可以链接到主题的 repo。`git clone` 了一波，然后按教程配置了主题。\n\n\n\n## 配置 git ssh\n\n按网上教程配置 git ssh。遇到\n\n```\nThe authenticity of host 'github.com (xxx.xxx.xxx.xxx)' can't be established.\n```\n\n这个错误，搜了一下发现新建 ssh 缺少 `known_hosts` 文件，回答 yes 就行，无伤大雅。\n\n\n\n## 部署博客\n\n在 `_config.yml` 配置了 `deploy`。到此为止已经万事俱备，`hexo d` 完成。\n\n\n\n## 从今开始\n\n很愉快，从今以后我可以开始在自己的博客中写东西了。不过近期还需完成这几件事：\n\n1. 购买域名\n2. 购买服务器搭建后台\n3. 将 GitHub Pages + Hexo 迁移到服务器上\n\n主要是为了学学后端开发，而且也很想要一个自己的域名。如果 GitHub Student Pack 能申成，域名和服务器就可以靠 Pack 中的优惠获得了。\n\n\n\n**Have a Ruthastic day!**\n\n","tags":["技术-综合"]}]